body {
    font-family: Arial, sans-serif;
    display: flex;
    flex-direction: column;
    align-items: center;
    background-color: #f0f0f0;
}

.controls {
    margin: 20px;
}

.grid-container {
    display: flex;
    gap: 40px;
    background: white;
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

.grid-wrapper {
    text-align: center;
}

.grid-wrapper h3 {
    margin-bottom: 10px;
    color: #333;
}

.grid {
    display: grid;
    grid-template-columns: repeat(var(--grid-size, 4), 1fr);
    gap: 8px;
    margin-bottom: 20px;
    padding: 15px;
    position: relative;
    background: white;
}

.cell {
    width: 60px;
    height: 60px;
    border: 2px solid #ddd;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    font-size: 24px;
    background: white;
    transition: background-color 0.2s;
    position: relative;
}

.cell.filled {
    background: #e8e8e8;
    cursor: not-allowed;
}

.cell:hover:not(.filled) {
    background: #f5f5f5;
}

.cell[data-value="0"]::before {
    content: "‚òÄÔ∏è";
}

.cell[data-value="1"]::before {
    content: "üåô";
}

/* Constraint styles - completely revised */
.constraint-horizontal::after,
.constraint-vertical::after {
    position: absolute;
    font-weight: bold;
    font-size: 24px;
    text-align: center;
    z-index: 10;
}

.constraint-horizontal::after {
    content: attr(data-constraint);
    right: -16px;
    top: 50%;
    transform: translateY(-50%);
}

.constraint-vertical::after {
    content: attr(data-constraint);
    bottom: -16px;
    left: 50%;
    transform: translateX(-50%);
}

/* Colors for constraint symbols */
[data-constraint="="]::after {
    color: #2196F3;
}

[data-constraint="‚â†"]::after {
    color: #F44336;
}

.cell.constraint {
    overflow: visible;
}

.cell.constraint::after {
    pointer-events: none;
    white-space: nowrap;
}

.cell:last-child .constraint-horizontal::after {
    right: -14px;
}

.cell:last-of-type .constraint-vertical::after {
    bottom: -14px;
}

button {
    padding: 10px 20px;
    margin: 5px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    background-color: #4CAF50;
    color: white;
}

button:hover {
    background-color: #45a049;
}

.difficulty-selector {
    margin: 10px;
}

.message {
    margin-top: 20px;
    padding: 10px;
    border-radius: 5px;
}

.success {
    background-color: #dff0d8;
    color: #3c763d;
}

.error {
    background-color: #f2dede;
    color: #a94442;
}

.solution-grid {
    opacity: 0.8;
}

/* Add these new styles */
.puzzle-info {
    margin: 10px 0;
    text-align: center;
    font-size: 1.1em;
    display: flex;
    gap: 20px;
    justify-content: center;
    align-items: center;
}

#puzzleNumber {
    color: #666;
    font-weight: bold;
}

.unique-status {
    padding: 5px 10px;
    border-radius: 15px;
    font-size: 0.9em;
}

.unique-status.unique {
    background-color: #e8f5e9;
    color: #2e7d32;
    border: 1px solid #a5d6a7;
}

.unique-status.non-unique {
    background-color: #fff3e0;
    color: #ef6c00;
    border: 1px solid #ffcc80;
} 